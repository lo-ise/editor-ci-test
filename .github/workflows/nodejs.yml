# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: maputnik

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: "build/node@${{ matrix.node-version }} (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [10.x, 12.x]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm install
    - run: npm run build



  test_selenium_standalone_chrome:
    name: "test/standalone-chrome (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [10]

    container:
      image: node:${{ matrix.node-version }}
      options: --network-alias testhost

    services:
      selenium:
        image: selenium/standalone-chrome:3.141.59
        ports:
        - 4444:4444

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm install
    - run: DOCKER_HOST=selenium npm test
    - run: ./node_modules/.bin/istanbul report --include build/artifacts/coverage/coverage.json --dir build/artifacts/coverage html lcov
    - uses: actions/upload-artifact@v1
      with:
        name: coverage
        path: build/artifacts/coverage

